---
import TankaLayout from '@/layouts/TankaLayout.astro'
import TankaCard from '@/components/tanka/Card.astro'
import Bar from '@/components/tanka/Bar.astro'
import PrevNext from '@/components/tanka/PrevNext.astro'
import Load from '@/components/tanka/Load.astro'
---

<script>
  // TODO: 今は短歌ページが１つなのでここに書くがどこかで共通利用できるようにする
  // Layoutに寄せるか……？Layoutにしてはファットなように思う
  // そもそものベースのLayoutがファット過ぎてるのかもしれない

  const prev = document.querySelector('.js-prev')
  const next = document.querySelector('.js-next')
  const tankaList = document.querySelectorAll('.js-tankaCard')
  const tankaMainElement = document.querySelector('.js-tankaMain')
  let current = 0

  prev?.addEventListener('click', () => {
    if (current < 1) return
    current--
    tankaList[current].scrollIntoView({ behavior: 'smooth', inline: 'center' })
  })

  next?.addEventListener('click', () => {
    if (current >= tankaList.length - 1) return
    current++
    tankaList[current].scrollIntoView({ behavior: 'smooth', inline: 'center' })
  })

  const observer = new IntersectionObserver(
    (entries) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          const target = entry.target as HTMLElement
          if (!target) return
          current = Number(target.dataset.tankaid) - 1
          redrawBar()
        }
      })
    },
    {
      root: document.querySelector('body'),
      rootMargin: '0px',
      threshold: 0.8,
    }
  )

  tankaList.forEach((tanka) => {
    observer.observe(tanka)
  })

  document.addEventListener('astro:page-load', () => {
    tankaList[0].scrollIntoView({ behavior: 'smooth', inline: 'center' })
    setTimeout(() => {
      document.querySelector('.load')?.classList.add('hide')
    }, 180)
  })

  if (tankaMainElement)
    tankaMainElement.addEventListener('wheel', (event) => {
      const e = event as WheelEvent
      if (Math.abs(e.deltaY) < Math.abs(e.deltaX)) return
      e.preventDefault()
      tankaMainElement.scrollLeft += e.deltaY
    })

  const barElement = document.querySelector('.js-bar')
  const length = tankaList.length
  // currentに合わせてのびる
  const redrawBar = () => {
    if (!barElement || length === 0) return
    const elm = barElement as HTMLDivElement
    elm.style.width = `${(current + 1) * (100 / length - 1)}%`
  }
</script>

<TankaLayout title='夏の推し活短歌 | 北極のとある倉庫'>
  <Load />
  <h1 class='title'>推し活短歌 SUMMER TOUR 2024</h1>
  <div class='mainWrapper'>
    <div class='mainContent js-tankaMain'>
      <TankaCard id='1'>
        <span slot='first-line'>退屈な　日々はあまりに　早く過ぎ</span>
        <span slot='second-line'>うだる暑さに　動かぬ身体</span>
      </TankaCard>
      <TankaCard id='2'>
        <span slot='first-line'>唐突に　きみがいうから　どうしたら </span>
        <span slot='second-line'>おろおろして　右往左往して</span>
      </TankaCard>
      <TankaCard id='3'>
        <span slot='first-line'>きみにあう　準備を進める　カバンには</span>
        <span slot='second-line'>光るライトと　きみへのチケット</span>
      </TankaCard>
      <TankaCard id='4'>
        <span slot='first-line'>すこしだけ　勇気をだして　踏み出して</span>
        <span slot='second-line'>だから出会えて　幸せになれて</span>
      </TankaCard>
      <TankaCard id='5'>
        <span slot='first-line'>ほんとはね　疑ってたの　きみのこと</span>
        <span slot='second-line'>この世なんかに　いないんじゃないかって</span>
      </TankaCard>
      <TankaCard id='6'>
        <span slot='first-line'>きみがいる　本当にいる　それならさ</span>
        <span slot='second-line'>がんばってみても　いいかなって</span>
      </TankaCard>
      <TankaCard id='7'>
        <span slot='first-line'>また会える　その日目指して　鍛えるから</span>
        <span slot='second-line'>再戦よろしく　おねがいします🐉</span>
      </TankaCard>
    </div>
    <PrevNext />
  </div>

  <Bar />
</TankaLayout>

<style lang='scss'>
  .mainWrapper {
    display: flex;
    position: relative;
    .mainContent {
      display: flex;
      margin: 0 1rem;
      overflow-y: scroll;
      &::-webkit-scrollbar {
        display: none;
      }
    }
  }

  .title {
    color: white;
    font-weight: 200;
    font-size: 1rem;
    margin-bottom: 2rem;
  }
</style>
